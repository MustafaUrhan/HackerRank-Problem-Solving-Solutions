import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    static class birdType implements  Comparable<birdType>
    {
        int birdType;
        int birdCount;

        public birdType(int birdType) 
        {
            this.birdType=birdType;
            this.birdCount=1;
        }

        @Override
        public int compareTo(birdType o) {
           return o.birdCount-this.birdCount;
        }
        
    }
    // Complete the migratoryBirds function below.
    static int migratoryBirds(List<Integer> arr) {
        int[] birdsCounter = new int[ 5 ]; 
        int mCount=0;
        int rVal=0;
        for( int bird : arr )
        { 
            birdsCounter[ bird - 1 ]++;
        }
        for(int i=0;i<5;i++){
            if(birdsCounter[i]>mCount)
            {
                mCount=birdsCounter[i];
                rVal=i;
            }
        }
      return rVal+1;

    }

    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int arrCount = Integer.parseInt(bufferedReader.readLine().trim());

        String[] arrItems = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

        List<Integer> arr = new ArrayList<>();

        for (int i = 0; i < arrCount; i++) {
            int arrItem = Integer.parseInt(arrItems[i]);
            arr.add(arrItem);
        }

        int result = migratoryBirds(arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
