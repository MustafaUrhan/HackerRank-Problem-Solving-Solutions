import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the fairRations function below.
    static int fairRations(int[] arr) {
         int oddNum=0;
        int evenNum=0;
        int changeNum=0;
        for(int el:arr){
            if(el%2!=0){
                oddNum++;
            }else{
                evenNum++;
            }
        }
        int i=arr.length-1;
        if(oddNum%2==0 && evenNum!=arr.length){
            for(;i>0;){
                if(arr[i]%2!=0){
                    arr[i]++;
                    arr[i-1]++;
                    i--;
                    changeNum+=2;
                }
                else{
                    i--;
                }
            }
            return changeNum;
        }
        else if(evenNum==arr.length){
            return 0;
        }
        else return -1;                                                                                                                                                            
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int N = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] B = new int[N];

        String[] BItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < N; i++) {
            int BItem = Integer.parseInt(BItems[i]);
            B[i] = BItem;
        }

        int result = fairRations(B);
        String str=result==-1 ?  "NO":String.valueOf(result);
        bufferedWriter.write(str);
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
